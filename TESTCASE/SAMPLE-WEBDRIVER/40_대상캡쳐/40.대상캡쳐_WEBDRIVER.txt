;-----------------------------------------------------------------------------------------------------------------------------------------
;# 설명 : 파일에 저장된 정보를 이용하여 반복적으로 컨텐츠영역의 검수를 진행한다. 
;# "대상캡쳐" 명령을 통해 찾은 Tag 영역을 이미지로 바로 저장하고, text 내용이 있는지 확인한다.
;# 테스트 완료후 "부분캡쳐 리포트"에서 전체적으로 캡쳐된 결과 이미지 확인 
;-----------------------------------------------------------------------------------------------------------------------------------------

"$신규세션={host=localhost:4444,browserName=ie,platform=WINDOWS}" 세션생성 한다.

;상세 로그에 남기지 않도록 설정
;HIDE=ON 

; txt 파일의 1번 Line 부터 값을 읽어 오도록 함 
"$컨텐츠검색정보파일_WEBDRIVER=1" 참조설정 한다.
$무한반복=99999 설정한다.

;최초검색 URL을 읽어옴 (첫번째 줄은 접속 URL 임)

"$검색URL=$컨텐츠검색정보파일_WEBDRIVER" 설정한다.

$i=1 설정한다. $i=$무한반복 반복한다. {

	;두번쨰 줄 부터 정보를 읽어옴 (검색어,찾을tag정보,tag내에 존재해야할 text1^text2^...)
	"$컨텐츠검색정보=$컨텐츠검색정보파일_WEBDRIVER" 설정한다.

	; 가져온 정보에서 ","로 구분하여 데이터를 분리
	"$검색어=$컨텐츠검색정보,1" 부분설정한다.
	"$검색어=END" 같지않으면 {

		;각 항목 별도 다시 분리 
		"$검색어결과영역=$컨텐츠검색정보,2" 부분설정한다.
		"$검색어결과TEXT=$컨텐츠검색정보,3" 부분설정한다.

		;EUC-KR 방식의 문자열 Encoding 처리 
		"$검색어UTF8=_UnicodeURLEncode('|$검색어|')" 계산한다.

		;00x 형태로 파일명 생성
		"$캡쳐파일명=StringFormat('%03d',|$i|)" 계산한다.
		"$캡쳐파일명=|$캡쳐파일명|_|$검색어|" 설정한다.

		$검색URL|$검색어UTF8| 접속한다.
		"{|$검색어결과영역|},|$캡쳐파일명|"을 대상캡쳐 한다. 
		
		;검색결과내에 해당 text가 존재하는지 확인
		"{xpath://*[contains(. , '|$검색어결과TEXT|')]}"을 확인 한다. 
		
		현재화면 캡쳐

	}

	; "END" 이면 반복문을 빠져나감
	"$검색어=END" 같으면 $i=$무한반복 설정한다.
}

브라우저를 세션종료한다.
